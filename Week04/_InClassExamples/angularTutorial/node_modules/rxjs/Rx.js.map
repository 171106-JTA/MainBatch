{"version":3,"file":"Rx.js","sourceRoot":"","sources":["../src/Rx.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nexport {Subject, AnonymousSubject} from './Subject';\n/* tslint:enable:no-unused-variable */\nexport {Observable} from './Observable';\n\n// statics\n/* tslint:disable:no-use-before-declare */\nimport './add/observable/bindCallback';\nimport './add/observable/bindNodeCallback';\nimport './add/observable/combineLatest';\nimport './add/observable/concat';\nimport './add/observable/defer';\nimport './add/observable/empty';\nimport './add/observable/forkJoin';\nimport './add/observable/from';\nimport './add/observable/fromEvent';\nimport './add/observable/fromEventPattern';\nimport './add/observable/fromPromise';\nimport './add/observable/generate';\nimport './add/observable/if';\nimport './add/observable/interval';\nimport './add/observable/merge';\nimport './add/observable/race';\nimport './add/observable/never';\nimport './add/observable/of';\nimport './add/observable/onErrorResumeNext';\nimport './add/observable/pairs';\nimport './add/observable/range';\nimport './add/observable/using';\nimport './add/observable/throw';\nimport './add/observable/timer';\nimport './add/observable/zip';\n\n//dom\nimport './add/observable/dom/ajax';\nimport './add/observable/dom/webSocket';\n\n//operators\nimport './add/operator/buffer';\nimport './add/operator/bufferCount';\nimport './add/operator/bufferTime';\nimport './add/operator/bufferToggle';\nimport './add/operator/bufferWhen';\nimport './add/operator/catch';\nimport './add/operator/combineAll';\nimport './add/operator/combineLatest';\nimport './add/operator/concat';\nimport './add/operator/concatAll';\nimport './add/operator/concatMap';\nimport './add/operator/concatMapTo';\nimport './add/operator/count';\nimport './add/operator/dematerialize';\nimport './add/operator/debounce';\nimport './add/operator/debounceTime';\nimport './add/operator/defaultIfEmpty';\nimport './add/operator/delay';\nimport './add/operator/delayWhen';\nimport './add/operator/distinct';\nimport './add/operator/distinctUntilChanged';\nimport './add/operator/distinctUntilKeyChanged';\nimport './add/operator/do';\nimport './add/operator/exhaust';\nimport './add/operator/exhaustMap';\nimport './add/operator/expand';\nimport './add/operator/elementAt';\nimport './add/operator/filter';\nimport './add/operator/finally';\nimport './add/operator/find';\nimport './add/operator/findIndex';\nimport './add/operator/first';\nimport './add/operator/groupBy';\nimport './add/operator/ignoreElements';\nimport './add/operator/isEmpty';\nimport './add/operator/audit';\nimport './add/operator/auditTime';\nimport './add/operator/last';\nimport './add/operator/let';\nimport './add/operator/every';\nimport './add/operator/map';\nimport './add/operator/mapTo';\nimport './add/operator/materialize';\nimport './add/operator/max';\nimport './add/operator/merge';\nimport './add/operator/mergeAll';\nimport './add/operator/mergeMap';\nimport './add/operator/mergeMapTo';\nimport './add/operator/mergeScan';\nimport './add/operator/min';\nimport './add/operator/multicast';\nimport './add/operator/observeOn';\nimport './add/operator/onErrorResumeNext';\nimport './add/operator/pairwise';\nimport './add/operator/partition';\nimport './add/operator/pluck';\nimport './add/operator/publish';\nimport './add/operator/publishBehavior';\nimport './add/operator/publishReplay';\nimport './add/operator/publishLast';\nimport './add/operator/race';\nimport './add/operator/reduce';\nimport './add/operator/repeat';\nimport './add/operator/repeatWhen';\nimport './add/operator/retry';\nimport './add/operator/retryWhen';\nimport './add/operator/sample';\nimport './add/operator/sampleTime';\nimport './add/operator/scan';\nimport './add/operator/sequenceEqual';\nimport './add/operator/share';\nimport './add/operator/shareReplay';\nimport './add/operator/single';\nimport './add/operator/skip';\nimport './add/operator/skipLast';\nimport './add/operator/skipUntil';\nimport './add/operator/skipWhile';\nimport './add/operator/startWith';\nimport './add/operator/subscribeOn';\nimport './add/operator/switch';\nimport './add/operator/switchMap';\nimport './add/operator/switchMapTo';\nimport './add/operator/take';\nimport './add/operator/takeLast';\nimport './add/operator/takeUntil';\nimport './add/operator/takeWhile';\nimport './add/operator/throttle';\nimport './add/operator/throttleTime';\nimport './add/operator/timeInterval';\nimport './add/operator/timeout';\nimport './add/operator/timeoutWith';\nimport './add/operator/timestamp';\nimport './add/operator/toArray';\nimport './add/operator/toPromise';\nimport './add/operator/window';\nimport './add/operator/windowCount';\nimport './add/operator/windowTime';\nimport './add/operator/windowToggle';\nimport './add/operator/windowWhen';\nimport './add/operator/withLatestFrom';\nimport './add/operator/zip';\nimport './add/operator/zipAll';\n\n/* tslint:disable:no-unused-variable */\nexport {Operator} from './Operator';\nexport {Observer} from './Observer';\nexport {Subscription} from './Subscription';\nexport {Subscriber} from './Subscriber';\nexport {AsyncSubject} from './AsyncSubject';\nexport {ReplaySubject} from './ReplaySubject';\nexport {BehaviorSubject} from './BehaviorSubject';\nexport {ConnectableObservable} from './observable/ConnectableObservable';\nexport {Notification} from './Notification';\nexport {EmptyError} from './util/EmptyError';\nexport {ArgumentOutOfRangeError} from './util/ArgumentOutOfRangeError';\nexport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\nexport {TimeoutError} from './util/TimeoutError';\nexport {UnsubscriptionError} from './util/UnsubscriptionError';\nexport {TimeInterval} from './operator/timeInterval';\nexport {Timestamp} from './operators/timestamp';\nexport {TestScheduler} from './testing/TestScheduler';\nexport {VirtualTimeScheduler} from './scheduler/VirtualTimeScheduler';\nexport {AjaxRequest, AjaxResponse, AjaxError, AjaxTimeoutError} from './observable/dom/AjaxObservable';\nexport { pipe } from './util/pipe';\n\nimport { asap } from './scheduler/asap';\nimport { async } from './scheduler/async';\nimport { queue } from './scheduler/queue';\nimport { animationFrame } from './scheduler/animationFrame';\nimport { AsapScheduler } from './scheduler/AsapScheduler';\nimport { AsyncScheduler } from './scheduler/AsyncScheduler';\nimport { QueueScheduler } from './scheduler/QueueScheduler';\nimport { AnimationFrameScheduler } from './scheduler/AnimationFrameScheduler';\nimport { rxSubscriber } from './symbol/rxSubscriber';\nimport { iterator } from './symbol/iterator';\nimport { observable } from './symbol/observable';\n\nimport * as _operators from './operators';\n\nexport const operators = _operators;\n\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nlet Scheduler = {\n  asap,\n  queue,\n  animationFrame,\n  async\n};\n\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nlet Symbol = {\n  rxSubscriber,\n  observable,\n  iterator\n};\n\nexport {\n    Scheduler,\n    Symbol\n};\n"]}