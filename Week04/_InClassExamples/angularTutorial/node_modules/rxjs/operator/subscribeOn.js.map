{"version":3,"file":"subscribeOn.js","sourceRoot":"","sources":["../../src/operator/subscribeOn.ts"],"names":[],"mappings":";;AAGA,wDAAsE;AAEtE;;;;;;;;;;GAUG;AACH,qBAAoD,SAAqB,EAAE,KAAiB;IAAjB,sBAAA,EAAA,SAAiB;IAC1F,MAAM,CAAC,yBAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,IAAI,CAAkB,CAAC;AAC9D,CAAC;AAFD,kCAEC","sourcesContent":["\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn as higherOrder } from '../operators/subscribeOn';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(this: Observable<T>, scheduler: IScheduler, delay: number = 0): Observable<T> {\n  return higherOrder(scheduler, delay)(this) as Observable<T>;\n}\n"]}