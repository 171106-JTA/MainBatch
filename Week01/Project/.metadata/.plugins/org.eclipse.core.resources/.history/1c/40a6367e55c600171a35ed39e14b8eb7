package com.revature.model.account;

import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.TimeUnit;

import com.revature.model.Constants;


public final class BasicUserAccount extends AdultUserAccount {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2386161524991619034L;
	private transient Timer acctTimer;
	private transient TimerTask acctTimeTask;
	private static double interest = Constants.BASIC_INT_RATE_BELOW10;
	private static int limit = Constants.BASIC_CRED_LIMIT;
	private static int penalty = Constants.BASIC_USER_PENALTY;
	
	public BasicUserAccount() {
		super(limit, interest, penalty);
	}
	
	public BasicUserAccount(UserAccount from) {
		super(from.getUser(), from.getPass(), from.getAge(), 
				from.getBalance(), from.getInterest(), from.getLimit(), from.getLoans(),
				from.getPenalty(), from.getStart(), from.getStatus(), 
				from.getTransactions(), from.getUid());
		}

	public void setInterest(double interest) {
		super.setInterest(interest);
	}
	
	private void setTimer() {

		acctTimer = new Timer();
		acctTimer.schedule(new AcctTimeTask(), TimeUnit.DAYS.toMillis(1));
	}
	
	public void stopTimer() {
		acctTimer.cancel();
	}

	
	private class AcctTimeTask extends TimerTask {
		private int years = 0;
		private int days = 0;

		@Override
		public void run() {
			days++;
			if(days == 365) {
				years++;
				setAge(getAge() + 1);
				days = 0;
				if()
			}
			// Calendar cal = Calendar.getInstance();
			//
			// while (!Thread.currentThread().isInterrupted()) {
			// cal.setTime(date);
			// cal.add(Calendar.YEAR, 10);
			// if (cal.getTime().compareTo(date) >= 0) {
			// if (UserAccount.this instanceof BasicUserAccount) {
			// ((BasicUserAccount)
			// UserAccount.this).setInterest(Constants.BASIC_INT_RATE_BELOW20);
			// }
			// cal.add(Calendar.YEAR, 10);
			// if (cal.getTime().compareTo(date) >= 0)
			// if (UserAccount.this instanceof BasicUserAccount) {
			// ((BasicUserAccount)
			// UserAccount.this).setInterest(Constants.BASIC_INT_RATE_BELOW30);
			// }
			// }
			// }
			// date = cal.getTime();
			//
			//

		}
	}


	@Override
	public String toString() {
		return "BasicUserAccount [limit=" + limit + ", penalty=" + penalty + ", status=" + status + ", interest="
				+ interest + ", permissions=" + permissions + "]";
	}

	
}
