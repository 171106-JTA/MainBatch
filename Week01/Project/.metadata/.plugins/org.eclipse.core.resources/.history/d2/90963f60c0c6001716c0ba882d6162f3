package com.revature.view;

import java.io.PrintStream;
import java.util.Map;

import org.apache.log4j.Logger;

import com.revature.model.Properties;

public class Console {
	private static Console console;
	private static Logger log = Logger.getLogger(Console.class);

	private Console() {
		super();
	}

	public static Console getInstance() {
		if (console == null)
			console = new Console();
		return console;
	}

	public static void printPage(String[] options) {
		for (int i = 0; i < options.length; i++) {
			System.out.println(i + ": " + options[i]);
		}
	}

	public static void print(Object o, int priority) {
		System.out.println(o);
		log(o, priority);
	}

	public static void print(PrintStream ps, Exception e) {
		ps.println(e.getMessage());
		if (Properties.DEBUG)
			e.printStackTrace();
		log(e, Properties.ERROR);
	}

	public static void printFinances(double balance, double interest, int limit) {
		System.out.println(Properties.BALANCE_STR + balance);
		System.out.println(Properties.CRED_LIM_STR + limit);
		System.out.println(Properties.CRED_INT_STR + interest);
	}

	public static <K, V> void printMap(Map<K, V> map) {
		if (map == null || map.isEmpty()) {
			System.out.println("empty");
			return;
		}

		for (K key : map.keySet()) {
			System.out.println(key + ": " + map.get(key));
		}
	}
	
	private void log(Object o, int priority) {
		switch(priority) {
		case Properties.TRACE:
			log.trace(o);
		case Properties.DBUG:
			log.debug(o);
		case Properties.INFO:
			log.info(o);
		case Properties.WARN:
			log.warn(o);
		case Properties.ERROR:
			log.error(o);
		case Properties.FATAL:
			log.fatal(o);
		}
	}

}
