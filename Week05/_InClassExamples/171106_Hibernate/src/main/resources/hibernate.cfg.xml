<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration SYSTEM "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration> <!-- ROOT TAG -->
	<session-factory> <!-- Configuration for the session factory -->
		
		<!-- Configure the database. -->
		<!-- This is like the jdbc class.forName() -->
		<property name="hibernate.connection.driver_class">
			oracle.jdbc.OracleDriver
		</property>
		<!-- Configure which database engine you are connecting to -->
		<!-- if you ever change change languages, this is the property to change -->
		<property name="hibernate.dialect">
			org.hibernate.dialect.Oracle10gDialect
		</property>
		<property name="hibernate.connection.url">
			jdbc:oracle:thin:@localhost:1521:xe
			<!-- AWS connections:
				jdbc:oracle:thin:@AWS_ENDPOINT:1521:orcl
			 -->
		</property>
		<property name="hibernate.connection.username">
			agni
		</property>
		<property name="hibernate.connection.password">
			passwd
		</property>
		
		<property name="hibernate.connection.pool_size">10</property>
		
		<property name="show_sql">true</property>
		<property name="hibernate.hbm2ddl.auto">create</property>
		<!-- hbm2ddl is a very key property of hibernate.
		There are 4 different states you can place it as:
		update: perform hibernate actions on an existing database
		create: wipe any existing database tables, and create from scratch
		validate: Creates the schema, destroying old data
		create-drop: database is cleared and emptied upon server shutdown -->
		
		<!-- L2 Caching configuration -->
		<!-- <property name="net.sf.ehcache.configurationResourceName">/ehcache.xml</property>
		<property name="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</property>
		<property name="hibernate.cache.use_second_level_cache">true</property>
		<property name="hibernate.cache.use_query_cache">true</property> -->
		<!-- MAPPINGS -->
		<mapping resource="Employee.hbm.xml"></mapping>
		<mapping class="com.revature.beans.Employee"/>
		<mapping class="com.revature.beans.Bear"/>
		<mapping class="com.revature.beans.Cave"/>
		<mapping class="com.revature.beans.HoneyPot"/>
	</session-factory>
</hibernate-configuration>